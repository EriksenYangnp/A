//shell scripte
http://linuxcommand.org/lc3_wss0010.php

//dependency conflict in maven
https://maven.apache.org/plugins/maven-dependency-plugin/examples/resolving-conflicts-using-the-dependency-tree.html

//singleton 
class Singleton{
  private static Singleton instance = new Singleton(); 
  
  private Singleton(){
  }
  
  public static Singleton getInstance(){
    return instance;
  }
} 

versersave string

Runnable vs callable


functional interface in java 8
https://www.baeldung.com/java-8-functional-interfaces

20200117
chcked exception unchecked exception

how to create thread: extend thread, implement runable, use Executor framework

mvn dependency confilct: dependency tree
Maven Enforcer Plugin 
import library G before library Y inside X's POM file
https://maven.apache.org/plugins/maven-dependency-plugin/examples/resolving-conflicts-using-the-dependency-tree.html

20200115 
imutable class: when you will create? microService connect  with DB(userName,PW). when you switch DB

Json: obj put in hashtable/hashmap

Priority Queue
https://www.tutorialspoint.com/data_structures_algorithms/priority_queue.htm

block queue
https://dzone.com/articles/java-concurrency-blocking-queu

java8 validate users: optional (ofNullable /ifPresent() )
https://www.jianshu.com/p/df403cab2d09

reaction

I/O

spring authtication
https://www.youtube.com/watch?v=caCJAJC41Rk

hibernate
https://www.jianshu.com/p/c59e974e2a70
https://www.javatpoint.com/steps-to-create-first-hibernate-application

20200121 VA
Hashmap HashTable  (1,aa) (1,bb) 后面的覆盖前面的
where to handle exception 
memory leaking: log 
where set thread 
    <bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
    <property name="corePoolSize" value="5" />
    <property name="maxPoolSize" value="10" />
    <property name="queueCapacity" value="25" />
  </bean>


* sleep()/ wait()
sleep() is a method which is used to pause the process for few seconds or the time we want to. But in case of wait() method, thread goes in waiting state and it won’t come back automatically until we call the notify() or notifyAll()
* class loader
https://www.journaldev.com/349/java-classloader
*Can Enum implements an interface 
https://www.tutorialspoint.com/can-enum-implements-an-interface-in-java
*Spring DispatcherServlet   front controller for Spring based web applications

*WebApplicationContext
The ApplicationContext is the central interface within a Spring application that is used for providing configuration information to the application.

Hibernate
https://www.jianshu.com/p/c59e974e2a70
https://www.javatpoint.com/java-tutorial

Angular
Component/ directive

AWS: 
Route 53, Load Balancing, Cloud Watch , ECS , ELK

20200123 Wipro 
1.spring step
2.Rest data flow + @
3prim number
  https://www.geeksforgeeks.org/prime-numbers/
4.string char Frequency
5.API gateway
  https://www.jianshu.com/p/1803b8609e0b

20200204 citi
1. java.lang.Object : https://www.cnblogs.com/lwbqqyumidi/p/3693015.html
  protected void finalize();
   wait(...) / notify() / notifyAll()
   String toString()
   hashCode
   equals
2.protected void finalize();


３.为何重写equals方法就得重写hashCode方法: https://blog.csdn.net/xl_1803/article/details/80445481   
   check hash code then check equal
   if not overide hashcode, 默认的hashcode方法是根据对象的内存地址经哈希算法得来的，显然此时s1!=s2,故两者的hashcode不一定相等.
   然而重写了equals，且s1.equals(s2)返回true，根据hashcode的规则，两个对象相等其哈希值一定相等，所以矛盾就产生了
 
 4.　final variable : constant variable
     final methode : prevent override
     final class : prevent inheritance(extend)

  5.sql 5 type statement
       Data definition language (DDL), 
       Data manipulation language (DML), 
       Data Control Language (DCL), 
       Transaction Control Statement (TCS), 
       Session Control Statements (SCS).
       
 6. Primary key :  uniquely identifies each tuple (row) in that table
    Unique key constraints also identifies an individual tuple uniquely in a relation or table
        Primary key will not accept NULL values whereas Unique key can accept one NULL value.
        only primary key whereas there can be multiple unique key on a table.
        A Clustered index automatically created when a primary key is defined whereas Unique key generates the non-clustered index.

 
 
 
 
 
 
