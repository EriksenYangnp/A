https://github.com/in28minutes/spring-microservices/blob/master/03.microservices/step03.md
  pplication.properties: ( limits-service.maximum=999)
  create Configuration.java to get infor from application.properties 
      ( @ConfigurationProperties("limits-service") / private int maximum / setters & getters)
  @Autowired configuration at Controller    
  

step7 
  creat limits-service.properties.  
  config is in application.properties(spring.cloud.config.server.git.url=file:/// uri...)
  @EnableConfigServer in Application

Step9
  chang limits-service's application.pro to bootstrap.pro ( spring.application.name match git-localconfig-rep limits-srvice
                                                            spring.cloud.config.uri=http:// spring-cloud-config-service port)
                                                            
   
Git: c/Users/Public/git-localconfig-repo

step17
   data.sql ( inset into exchange_calue(id,...) values(100,...);
   pom()  	<dependency>
              <groupId>org.springframework.boot</groupId>
              <artifactId>spring-boot-starter-data-jpa</artifactId>
            </dependency>
            <dependency>
              <groupId>com.h2database</groupId>
              <artifactId>h2</artifactId>
           </dependency>
   ExchangeValue.java (@Entity  @Id @Column)
   application.properties: spring.jpa.show-sql=true
                            spring.h2.console.enabled=true
   brower: jdbc:h2:mem:testdb

Step 20
  RestTemplate.getForEntity( uri, XXX.class(return), pass_value(HashMap))
  
Step 21 Feign -- rest service client
  1.add dependency in pom
  2.add @EnableFeignClient at application class
  3.create proxy: interface  @FeignClient(name, url) @GetMapping to call other service

step 22 Ribbon - load balance
  1.pom file
  2.at proxy interface @ EnableRibbon(name)
  3.url update at application properties










